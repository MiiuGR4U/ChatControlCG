# .github/workflows/release.yml
name: Create ChatControl Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Define Tag and Fetch Changelog
        id: get_info
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            TAG_NAME="${{ github.ref_name }}"
          else
            TAG_NAME=$(gh api repos/kangarko/ChatControl/releases/latest --jq '.tag_name')
          fi
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"
          CHANGELOG_BODY=$(gh api repos/kangarko/ChatControl/releases/tags/$TAG_NAME --jq '.body' 2>/dev/null) || true
          if [[ -z "$CHANGELOG_BODY" ]]; then
            CHANGELOG_BODY="Nenhum changelog oficial encontrado para esta tag."
          fi
          cat <<EOF >> "$GITHUB_OUTPUT"
          changelog<<HEREDOC
          $CHANGELOG_BODY
          HEREDOC
          EOF
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and Install 'Foundation' Dependency
        run: |
          echo "Cloning and installing the Foundation library..."
          git clone https://github.com/kangarko/Foundation.git
          cd Foundation
          mvn -B install -DskipTests

      # --- ALTERAÇÃO AQUI ---
      - name: Build Bukkit and Velocity Modules
        run: |
          # Compila apenas os módulos 'chatcontrol-bukkit' e 'chatcontrol-velocity' e suas dependências internas.
          # A flag '-pl' significa '--projects', e '-am' significa '--also-make'
          mvn -B package -pl chatcontrol-bukkit,chatcontrol-velocity -am -DskipTests

      # --- ALTERAÇÃO AQUI ---
      - name: Prepare Release Assets
        run: |
          mkdir -p release_assets
          # Encontra os JARs nos diretórios de target corretos e os renomeia
          find chatcontrol-bukkit/target -name "ChatControl-Pro-*.jar" -exec mv {} release_assets/ChatControl-Paper-${{ steps.get_info.outputs.tag_name }}.jar \;
          find chatcontrol-velocity/target -name "ChatControl-Velocity-*.jar" -exec mv {} release_assets/ChatControl-Velocity-${{ steps.get_info.outputs.tag_name }}.jar \;
          echo "Assets prepared for release:"
          ls -l release_assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_info.outputs.tag_name }}
          body: ${{ steps.get_info.outputs.changelog }}
          # Anexa todos os JARs da pasta de assets
          files: release_assets/*.jar
